version: "3.5"

services:
  nextcloud:
    build: ./nextcloud
    image: ${IMAGE_PREFIX}nextcloud:latest
    container_name: ${CONTAINER_PREFIX}nextcloud
    volumes:
      - "${NEXTCLOUD_PATH}:/data"
      - type: tmpfs
        target: /tmp
    dns:
      - ${LOCAL_DNS_SERVER}
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.nextcloud.entrypoints=https"
      - "traefik.http.routers.nextcloud.rule=Host(`${NEXTCLOUD_DOMAIN}`)"
      - "traefik.http.routers.nextcloud.middlewares=nextcloud-dav,nextcloud-webfinger,nextcloud-regex,nextcloud-header"
      - "traefik.http.routers.nextcloud.tls=true"
      - "traefik.http.routers.nextcloud.service=nextcloud"
      - "traefik.http.services.nextcloud.loadbalancer.server.port=8000"
      - "traefik.http.middlewares.nextcloud-dav.replacepathregex.regex=^/.well-known/(card|cal)dav"
      - "traefik.http.middlewares.nextcloud-dav.replacepathregex.replacement=/remote.php/dav/"
      - "traefik.http.middlewares.nextcloud-webfinger.replacepathregex.regex=^(/.well-known.*)"
      - "traefik.http.middlewares.nextcloud-webfinger.replacepathregex.replacement=/index.php$${1}"
      - "traefik.http.middlewares.nextcloud-regex.redirectregex.permanent=true"
      - "traefik.http.middlewares.nextcloud-header.headers.referrerPolicy=no-referrer"
      - "traefik.http.middlewares.nextcloud-header.headers.stsSeconds=31536000"
      - "traefik.http.middlewares.nextcloud-header.headers.forceSTSHeader=true"
      - "traefik.http.middlewares.nextcloud-header.headers.stsPreload=true"
      - "traefik.http.middlewares.nextcloud-header.headers.stsIncludeSubdomains=true"
      - "traefik.http.middlewares.nextcloud-header.headers.browserXssFilter=true"
      - "traefik.http.middlewares.nextcloud-header.headers.customFrameOptionsValue=SAMEORIGIN"
      - "traefik.http.middlewares.nextcloud-header.headers.customRequestHeaders.X-Forwarded-Proto=https"
      - "traefik.http.middlewares.nextcloud-header.headers.customResponseHeaders.X-Robots-Tag=noindex,nofollow"
      - "traefik.http.routers.nextcloud-push.entrypoints=https"
      - "traefik.http.routers.nextcloud-push.rule=Host(`${NEXTCLOUD_DOMAIN}`) && PathPrefix(`/push`)"
      - "traefik.http.routers.nextcloud-push.tls=true"
      - "traefik.http.routers.nextcloud-push.service=nextcloud-push"
      - "traefik.http.routers.nextcloud-push.middlewares=nextcloud-push_stripprefix"
      - "traefik.http.middlewares.nextcloud-push_stripprefix.stripprefix.prefixes=/push"
      - "traefik.http.services.nextcloud-push.loadbalancer.server.port=7867"
      - "traefik.docker.network=traefik"
    env_file:
      - .env
    restart: unless-stopped
    networks:
      - nextcloud
      - mysql
      - traefik

  cron:
    build: ./nextcloud
    image: ${IMAGE_PREFIX}nextcloud:latest
    container_name: ${CONTAINER_PREFIX}nextcloud_cron
    depends_on:
      - nextcloud
    volumes:
      - "${NEXTCLOUD_PATH}:/data"
    env_file:
      - .env
    environment:
      - "SIDECAR_CRON=1"
      - "CRON_PERIOD=*/5 * * * *"
    restart: unless-stopped
    networks:
      - nextcloud
      - mysql
      - traefik

  news_updater:
    build: ./nextcloud
    image: ${IMAGE_PREFIX}nextcloud:latest
    container_name: ${CONTAINER_PREFIX}nextcloud_news_updater
    depends_on:
      - nextcloud
    volumes:
      - "${NEXTCLOUD_PATH}:/data"
    env_file:
      - .env
    environment:
      - "SIDECAR_NEWSUPDATER=1"
      - "NC_NEWSUPDATER_THREADS=10"
      - "NC_NEWSUPDATER_TIMEOUT=300"
      - "NC_NEWSUPDATER_INTERVAL=900"
      - "NC_NEWSUPDATER_LOGLEVEL=error"
    restart: unless-stopped
    networks:
      - nextcloud
      - mysql
      - traefik

  imaginary:
    build: ./imaginary
    image: ${IMAGE_PREFIX}nextcloud_imaginary:latest
    container_name: ${CONTAINER_PREFIX}nextcloud_imaginary
    env_file:
      - .env
    networks:
      - nextcloud
      - traefik

  nextcloud_redis:
    container_name: ${CONTAINER_PREFIX}nextcloud_redis
    image: redis:7.2-rc-alpine
    restart: unless-stopped
    env_file:
      - .env
    networks:
      - nextcloud
  
  talk:
    build: ./talk
    image: ${IMAGE_PREFIX}nextcloud_talk:latest
    container_name: ${CONTAINER_PREFIX}nextcloud_talk
    env_file:
      - .env
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.nextcloud-talk-signaling.entrypoints=https"
      - "traefik.http.routers.nextcloud-talk-signaling.tls=true"
      - "traefik.http.routers.nextcloud-talk-signaling.rule=Host(`${NEXTCLOUD_DOMAIN}`) && PathPrefix(`/talk`)"
      - "traefik.http.routers.nextcloud-talk-signaling.service=nextcloud-talk-signaling"
      - "traefik.http.routers.nextcloud-talk-signaling.middlewares=nextcloud-talk-signaling_stripprefix"
      - "traefik.http.services.nextcloud-talk-signaling.loadbalancer.server.port=8081"
      - "traefik.http.middlewares.nextcloud-talk-signaling_stripprefix.stripprefix.prefixes=/talk"
      - "traefik.docker.network=traefik"
    ports:
      - "${NEXTCLOUD_TALK_TURN_PORT}:${NEXTCLOUD_TALK_TURN_PORT}/tcp"
      - "${NEXTCLOUD_TALK_TURN_PORT}:${NEXTCLOUD_TALK_TURN_PORT}/udp"
    networks:
      - traefik

networks:
  nextcloud:
    driver: bridge
    name: nextcloud
    # enable_ipv6: true
    # driver_opts:
    #   com.docker.network.enable_ipv6: "true"
  mysql:
    name: mysql
    external: true
  traefik:
    name: traefik
    external: true
