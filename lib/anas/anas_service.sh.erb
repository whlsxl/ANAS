#!/bin/sh

default_interface=<%= default_interface %>
ip_addr=<%= ip_addr %>
subnet_mask=<%= subnet_mask %>
netwrok_prefix=<%= netwrok_prefix %>
bridge_interface=<%= bridge_interface %>

create () {
  if [ "x$default_interface" = 'x' ]; then
    echo "Create macvlan network bridge error! default_interface empty! $default_interface"
    exit 1
  fi
  echo $ip_addr | grep -oE '((1?[0-9][0-9]?|2[0-4][0-9]|25[0-5])\.){3}(1?[0-9][0-9]?|2[0-4][0-9]|25[0-5])'
  result=$?
  if [ $result -ne 0 ]; then
    echo "Create macvlan network bridge error! IP addr format error! $result"
    exit 1
  fi
  if [ $subnet_mask -gt 0 ]; then
    if [ $subnet_mask -le 32 ]; then
      echo "Create macvlan network bridge named: $bridge_interface"
      echo "ip link add $bridge_interface link $default_interface type macvlan mode bridge"
      ip link add $bridge_interface link $default_interface type macvlan mode bridge
      echo "ip addr add $netwrok_prefix/$subnet_mask dev $bridge_interface"
      ip addr add $netwrok_prefix/$subnet_mask dev $bridge_interface
      echo "ip link set $bridge_interface up"
      ip link set $bridge_interface up
      echo "ip route add $netwrok_prefix/$subnet_mask dev $bridge_interface"
      ip route add $netwrok_prefix/$subnet_mask dev $bridge_interface
      return
    fi
  fi
  echo "Create macvlan network bridge error! IP subnet mask error! $subnet_mask"
  exit 1
}


case "$1" in
create)	create
	      ;;
del)	  ip link delete $bridge_interface
        ;;
*)      create
        ;;
esac
exit 0
